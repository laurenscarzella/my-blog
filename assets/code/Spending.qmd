---
title: "Code"
format: html
editor: visual
---

## Import Libraries
```{r, message = F}
library(ggplot2) # used for plots
library(leaflet) # used to make interactive maps
library(dplyr) # used for grouping the data
```

## Read in Dataset
```{r}
df <- read.csv('spending.csv', header = T) 
head(df)
```

## Change Variable Types
```{r}
df$Date <- trimws(df$Date)
df$Date <- as.Date(df$Date, format = "%m/%d/%Y")
df$Category <- as.factor(df$Category)
df$Amount <- gsub("[^0-9.]", "", df$Amount)
df$Amount <- as.numeric(df$Amount)
df$Method <- as.factor(df$Method)
df$Necessity <- as.factor(df$Necessity)
df$Emotion <- as.factor(df$Emotion)
df$Money.Left <- gsub("[^0-9.]", "", df$Money.Left)
df$Money.Left <- as.numeric(df$Money.Left)
df$Income.Expense <- as.factor(df$Income.Expense)
```

## Visualize Your Spending Data

### Amount Spent Per Category
```{r}
spentdf <- subset(df, !(Category %in% c("Income", "Other"))) 

ggplot(spentdf, aes(x = Category, y = Amount, fill = Category))+
  geom_bar(stat = "identity") +
  labs(title = "Total Amount Spent Per Category", x = "Category", y = "Amount ($)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
```

### Pie Chart of Emotion Felt During Transactions
```{r}
counts <- table(df$Emotion)

pie(counts,
    main = "Count of Emotions Felt During Transactions",
    col = rainbow(length(counts)),
    labels = paste(names(counts), "\n", counts))
```

### Line Chart of Money In Account Over Time
```{r}
plot(df$Date, df$Money.Left, type = "o", col = "cornflowerblue",
      xlab = "Date", ylab = "Money Left ($)",
      main = "Money In Bank Account Over Time", pch = 16)
```

### Map of Location of Transactions
```{r, message=F}
# Make a new dataframe with missing values for location removed
mapdf <- na.omit(df)

map_summary <- mapdf %>%
  group_by(Latitude, Longitude, `Store.Name`) %>% # each unique combination of these three variables are treated as a separate group
  summarise(Count = n(), .groups = 'drop') # counts the number of transactions for each group n() and creates a new data frame called map_summary
 
leaflet(data = map_summary) %>% # creates map using map_summary data
  addTiles() %>% # adds default map tiles from OpenStreetMap to leaflet map
  addMarkers( # adds marker for each location by latitude and longitude
    ~Longitude, ~Latitude,
    popup = ~paste("Location:", `Store.Name`, "<br>", # specify what will be displayed in the popup
                   "Count of Transactions:", Count)
  ) %>%
  setView(lng = mean(map_summary$Longitude, na.rm = TRUE), # sets the view to the average latitude and longitude values from the data
          lat = mean(map_summary$Latitude, na.rm = TRUE), 
          zoom = 12)
```

# Find Monthly Average for Each Category
```{r}
sum_total <- aggregate(Amount ~ Category, data = df, FUN = base::sum)
sum_total$AverageSpent <- sum_total$Amount / 2
sum_total
```

